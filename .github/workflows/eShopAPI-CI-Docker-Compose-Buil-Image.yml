name: eShop API CI - Docker Compose Buil Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  build-application:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Display dotnet version
        run: dotnet --version
      - name: Restore dependencies
        working-directory: ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/
        run: dotnet restore eShopAPI.csproj
      - name: Build eShop API
        working-directory: ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/
        run: dotnet build eShopAPI.csproj --no-restore
      - name: Test eShop API
        working-directory: ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/
        run: dotnet test --logger trx --results-directory "TestResults-8.0"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results-8.0
          path: TestResults-8.0
          
  build-and-push-eshop-api-docker-image:
    needs: build-application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1.4.3
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push eShop API Docker image to Azure Container Registry
        working-directory: ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/
        run: | 
          docker-compose build

          az acr login --name creshop
          docker push creshop.azurecr.io/eshop/eshop-api:linux-latest

  #comment
  deploy-eshop-api-to-azure-kubernetes-service:
    needs: build-and-push-eshop-api-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v1.4.3
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy Shared Resources to AKS
        id: deploy-resources-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
            ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/deploy/AKS/SharedResources
      - name: Deploy eShop API to AKS
        id: deploy-app-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'eshop'
          manifests: |
            ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/deploy/AKS/