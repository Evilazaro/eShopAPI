name: eShop - Provision Cloud Resources and Deploy eShop API

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  cloud-resources-provisioning:
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      - name: Provisioning Azure Kubernetes Cluster
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az group create -l EastUS2 -n eShop-rg
            az deployment group create -g eShop-rg --template-uri https://raw.githubusercontent.com/Evilazaro/eShopAPI/main/src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/deploy/AKS/AzureResources/main.json --parameters \
              resourceName=eShop \
              upgradeChannel=stable \
              SystemPoolType=Standard \
              agentCountMax=20 \
              osDiskType=Managed \
              osDiskSizeGB=32 \
              registries_sku=Premium \
              acrPushRolePrincipalId=$(az ad signed-in-user show --query id --out tsv) \
              omsagent=true \
              retentionInDays=30 \
              maxPods=238 \
              ingressApplicationGateway=true

  build-and-push-eshop-api-docker-image:
    needs: cloud-resources-provisioning
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push eShop API Docker image to Azure Container Registry
        working-directory: ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/
        run: | 
          docker-compose build

          az acr login --name creshop
          docker push creshop.azurecr.io/eshop/eshop-api:linux-latest

  deploy-eshop-api-to-azure-kubernetes-service:
    needs: cloud-resources-provisioning
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get AKS Credentials
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az aks get-credentials --resource-group eShop-rg --name aks-eShop
      - name: Deploy eShop API to Azure Kubernetes Services
        run: | 
          kubectl apply -f ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/deploy/AKS/SharedResources/. -f ./src/eShopAPIOnContainers/eShopOnKubernetes/eShopAPI/deploy/AKS/.
