name: Create and Store Azure Credentials

on:
  push:
    branches:
      - main  # Customize the branch as needed

jobs:
  create-and-store-azure-credentials:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/setup-azure-cli@v1
        with:
          azcliversion: latest

      - name: Create Azure Service Principal
        id: create-service-principal
        run: |
          SP_JSON=$(az ad sp create-for-rbac --name "GitHubActionSP" --role contributor --scopes /subscriptions/{subscription_id} --sdk-auth)
          echo "::set-output name=sp_json::$SP_JSON"
        env:
          AZURE_SERVICE_PRINCIPAL_ID: ${{ secrets.AZURE_SERVICE_PRINCIPAL_ID }}
          AZURE_SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.AZURE_SERVICE_PRINCIPAL_PASSWORD }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Store Azure Credentials as Secrets
        run: |
          echo "$AZURE_SERVICE_PRINCIPAL_ID" >> $GITHUB_ENV
          echo "$AZURE_SERVICE_PRINCIPAL_PASSWORD" >> $GITHUB_ENV
          echo "$AZURE_TENANT_ID" >> $GITHUB_ENV
        env:
          AZURE_SERVICE_PRINCIPAL_ID: ${{ steps.create-service-principal.outputs.sp_json.clientId }}
          AZURE_SERVICE_PRINCIPAL_PASSWORD: ${{ steps.create-service-principal.outputs.sp_json.clientSecret }}
          AZURE_TENANT_ID: ${{ steps.create-service-principal.outputs.sp_json.tenantId }}

      - name: Set Azure Credentials as GitHub Secrets
        run: |
          echo "AZURE_SERVICE_PRINCIPAL_ID=$AZURE_SERVICE_PRINCIPAL_ID" >> $GITHUB_ENV
          echo "AZURE_SERVICE_PRINCIPAL_PASSWORD=$AZURE_SERVICE_PRINCIPAL_PASSWORD" >> $GITHUB_ENV
          echo "AZURE_TENANT_ID=$AZURE_TENANT_ID" >> $GITHUB_ENV
        env:
          AZURE_SERVICE_PRINCIPAL_ID: ${{ steps.create-service-principal.outputs.sp_json.clientId }}
          AZURE_SERVICE_PRINCIPAL_PASSWORD: ${{ steps.create-service-principal.outputs.sp_json.clientSecret }}
          AZURE_TENANT_ID: ${{ steps.create-service-principal.outputs.sp_json.tenantId }}

      - name: Clean up
        run: |
          unset AZURE_SERVICE_PRINCIPAL_ID
          unset AZURE_SERVICE_PRINCIPAL_PASSWORD
          unset AZURE_TENANT_ID
        shell: bash

      - name: Print Azure Credentials
        run: |
          echo "Azure Service Principal ID: $AZURE_SERVICE_PRINCIPAL_ID"
          echo "Azure Service Principal Password: ***"
          echo "Azure Tenant ID: $AZURE_TENANT_ID"
        env:
          AZURE_SERVICE_PRINCIPAL_ID: ${{ steps.create-service-principal.outputs.sp_json.clientId }}
          AZURE_TENANT_ID: ${{ steps.create-service-principal.outputs.sp_json.tenantId }}

# You can add more steps here to perform actions that require Azure credentials.
